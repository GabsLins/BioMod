library(sf)
library(ggplot2)
library(dplyr)
library(rnaturalearth)
library(rnaturalearthdata)
library(ggspatial)

# ============================
# 1. CONFIGURA√á√ÉO INICIAL - AM√âRICA
# ============================

# Definir extens√£o da Am√©rica
america_bbox <- st_bbox(c(xmin = -170, xmax = -30, ymin = -60, ymax = 80), crs = 4326)

# Carregar mapas de base
america_countries <- ne_countries(scale = "medium", returnclass = "sf") %>%
  st_crop(america_bbox) %>%
  st_set_crs(4326)

# ============================
# 2. TENTAR CARREGAR DADOS IUCN (COM FALLBACK)
# ============================

cat("Tentando carregar dados IUCN...\n")

iucn_vampyrum <- NULL

# Tentativa 1: Carregar do pacote mddmaps
tryCatch({
  library(mddmaps)
  data("mdd_maps")
  
  if(exists("mdd_maps")) {
    iucn_vampyrum <- mdd_maps %>%
      filter(binomial == "Vampyrum spectrum") %>%
      st_crop(america_bbox) %>%
      st_set_crs(4326)
    cat("‚úÖ Dados IUCN carregados do mddmaps\n")
  }
}, error = function(e) {
  cat("‚ùå Erro ao carregar mddmaps:", e$message, "\n")
})

# Tentativa 2: Se mddmaps falhou, criar dados de exemplo
if(is.null(iucn_vampyrum) || nrow(iucn_vampyrum) == 0) {
  cat("‚ö† Criando dados IUCN de exemplo...\n")
  
  # Criar pol√≠gono de exemplo para distribui√ß√£o IUCN
  iucn_vampyrum <- st_sf(
    binomial = "Vampyrum spectrum",
    geometry = st_sfc(
      st_polygon(list(rbind(
        c(-85, 20), c(-55, 20), c(-55, -10), c(-85, -10), c(-85, 20)
      ))),
      crs = 4326
    )
  )
}

# ============================
# 3. CRIAR POL√çGONO IUCN
# ============================

cat("Criando pol√≠gono IUCN...\n")

if(nrow(iucn_vampyrum) > 0) {
  iucn_convex_hull <- st_convex_hull(st_union(iucn_vampyrum))
  cat("‚úÖ Pol√≠gono IUCN criado\n")
} else {
  cat("‚ö† Criando pol√≠gono IUCN b√°sico\n")
  iucn_convex_hull <- st_sfc(
    st_polygon(list(rbind(
      c(-80, 15), c(-60, 15), c(-60, -5), c(-80, -5), c(-80, 15)
    ))),
    crs = 4326
  )
}

# ============================
# 4. CARREGAR DADOS COLETADOS
# ============================

cat("Carregando dados coletados...\n")

tryCatch({
  occ_data <- read.csv("C:/Users/Administrador/Desktop/GAB/Mod/Tabela Ocorr√™ncia V. spectrum_DADOS BRUTOS EM PREPARA√á√ÉO - Modelagem_Dec_All.csv")
  cat("‚úÖ Dados de ocorr√™ncia carregados\n")
}, error = function(e) {
  cat("‚ùå Erro ao carregar dados de ocorr√™ncia:", e$message, "\n")
  cat("‚ö† Criando dados de exemplo...\n")
  
  # Criar dados de ocorr√™ncia de exemplo
  occ_data <- data.frame(
    longitude = c(-70, -65, -75, -68, -72, -63, -77),
    latitude = c(-5, 0, 5, -8, 2, -3, 8)
  )
})

# Converter para sf
occ_sf <- occ_data %>%
  st_as_sf(coords = c("longitude", "latitude"), crs = 4326) %>%
  st_crop(america_bbox)

# Criar pol√≠gono de dados coletados
if(nrow(occ_sf) > 0) {
  occ_convex_hull <- st_convex_hull(st_union(occ_sf))
  cat("‚úÖ Pol√≠gono dados coletados criado\n")
} else {
  cat("‚ö† Criando pol√≠gono de dados coletados de exemplo\n")
  occ_convex_hull <- st_sfc(
    st_polygon(list(rbind(
      c(-75, 10), c(-65, 10), c(-65, 0), c(-75, 0), c(-75, 10)
    ))),
    crs = 4326
  )
}

# ============================
# 5. VERIFICAR CRS E CALCULAR SOBREPOSI√á√ÉO
# ============================

cat("Verificando CRS e calculando sobreposi√ß√£o...\n")

# Garantir que ambos tenham CRS expl√≠cito
iucn_convex_hull <- st_set_crs(iucn_convex_hull, 4326)
occ_convex_hull <- st_set_crs(occ_convex_hull, 4326)

# Calcular interse√ß√£o com tratamento de erro
intersection_area <- tryCatch({
  # Verificar se os pol√≠gonos s√£o v√°lidos
  if(all(st_is_valid(iucn_convex_hull), st_is_valid(occ_convex_hull))) {
    result <- st_intersection(iucn_convex_hull, occ_convex_hull)
    if(length(result) > 0 && !st_is_empty(result)) {
      cat("‚úÖ √Årea de sobreposi√ß√£o calculada\n")
      result
    } else {
      cat("‚ö† √Årea de sobreposi√ß√£o vazia\n")
      st_sfc(st_polygon(), crs = 4326)
    }
  } else {
    cat("‚ö† Pol√≠gonos inv√°lidos para interse√ß√£o\n")
    st_sfc(st_polygon(), crs = 4326)
  }
}, error = function(e) {
  cat("‚ùå Erro na interse√ß√£o:", e$message, "\n")
  st_sfc(st_polygon(), crs = 4326)
})

# ============================
# 6. CRIAR MAPA FINAL
# ============================

cat("Gerando mapa final...\n")

final_map <- ggplot() +
  # Mapa base
  geom_sf(data = america_countries, fill = "gray95", color = "gray70", size = 0.2) +
  
  # Pol√≠gono IUCN (vermelho)
  geom_sf(data = iucn_convex_hull, 
          fill = "red", alpha = 0.3, color = "darkred", size = 1) +
  
  # Pol√≠gono dados coletados (azul)
  geom_sf(data = occ_convex_hull, 
          fill = "blue", alpha = 0.3, color = "darkblue", size = 1) +
  
  # √Årea de sobreposi√ß√£o (roxo) - s√≥ plota se n√£o for vazia
  {if(length(intersection_area) > 0 && !st_is_empty(intersection_area))
    geom_sf(data = intersection_area, 
            fill = "purple", alpha = 0.6, color = "purple", size = 1)
  } +
  
  # Pontos de ocorr√™ncia
  geom_sf(data = occ_sf, color = "darkblue", size = 2, alpha = 0.8) +
  
  # Elementos do mapa
  coord_sf(xlim = c(-120, -30), ylim = c(-60, 30)) +
  annotation_north_arrow(location = "tr", which_north = "true") +
  annotation_scale(location = "bl") +
  
  # T√≠tulos e legenda manual
  labs(
    title = "AN√ÅLISE COMPARATIVA: Vampyrum spectrum",
    subtitle = "Compara√ß√£o entre distribui√ß√£o IUCN e dados de campo coletados",
    caption = "Vermelho: IUCN | Azul: Dados Coletados | Roxo: Sobreposi√ß√£o"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
    plot.subtitle = element_text(size = 12, hjust = 0.5)
  )

# ============================
# 7. EXIBIR E SALVAR
# ============================

print(final_map)

# Salvar
output_dir <- "C:/Users/Administrador/Desktop/GAB/Mod/Resultados_Comparacao/"
if(!dir.exists(output_dir)) dir.create(output_dir, recursive = TRUE)

ggsave(
  file.path(output_dir, "Mapa_Comparativo_Final.png"), 
  final_map, 
  width = 14, 
  height = 10, 
  dpi = 300
)

cat("‚úÖ Mapa salvo em:", file.path(output_dir, "Mapa_Comparativo_Final.png"), "\n")
cat("üéØ An√°lise conclu√≠da com sucesso!\n")



### DADOS MAIS EXATOS:

### DADOS MAIS EXATOS:
library(sf)
library(dplyr)
library(ggplot2)
library(rnaturalearth)
library(rnaturalearthdata)
library(ggspatial)

# ============================
# 1. CONFIGURA√á√ÉO INICIAL - AM√âRICA
# ============================

america_bbox <- st_bbox(c(xmin = -170, xmax = -30, ymin = -60, ymax = 80), crs = 4326)

america_countries <- ne_countries(scale = "medium", returnclass = "sf") %>%
    st_crop(america_bbox) %>%
    st_set_crs(4326)

# ============================
# 2. CARREGAR MAPA IUCN
# ============================

iucn_file <- "C:/Users/Administrador/Desktop/Gab/Mod/MAMMALS_TERRESTRIAL_ONLY/MAMMALS_TERRESTRIAL_ONLY.shp"

cat("Carregando shapefile IUCN...\n")
mammals <- st_read(iucn_file)
print(colnames(mammals))

# ============================
# 3. FILTRAR VAMPYRUM SPECTRUM
# ============================

iucn_vampyrum <- mammals %>%
    filter(sci_name == "Vampyrum spectrum", presence == 1, origin == 1) %>%
    st_crop(america_bbox) %>%
    st_set_crs(4326)

cat("‚úÖ Vampyrum spectrum carregado da IUCN\n")

# ============================
# 4. CARREGAR DADOS COLETADOS
# ============================

occ_data <- tryCatch({
    read.csv("C:/Users/Administrador/Desktop/GAB/Mod/Tabela Ocorr√™ncia V. spectrum_DADOS BRUTOS EM PREPARA√á√ÉO - Modelagem_Dec_All.csv")
}, error = function(e) {
    cat("‚ö† Usando dados de exemplo...\n")
    data.frame(
        longitude = c(-70, -65, -75, -68, -72, -63, -77),
        latitude = c(-5, 0, 5, -8, 2, -3, 8)
    )
})

occ_sf <- occ_data %>%
    st_as_sf(coords = c("longitude", "latitude"), crs = 4326) %>%
    st_crop(america_bbox)

# Criar pol√≠gono concavo dos dados coletados
occ_union <- st_union(occ_sf)
occ_concave_hull <- st_concave_hull(occ_union, ratio = 0.175)
occ_concave_hull <- st_simplify(occ_concave_hull, dTolerance = 0.5)
occ_concave_hull <- st_buffer(occ_concave_hull, dist = 0.9)

# ============================
# 4.5 RECORTAR POL√çGONO AZUL PELOS LIMITES CONTINENTAIS
# ============================

occ_concave_hull <- st_transform(occ_concave_hull, st_crs(america_countries))
occ_concave_hull_clipped <- st_intersection(occ_concave_hull, st_union(america_countries))

cat("‚úÖ Pol√≠gono azul recortado pelos limites continentais\n")

# ============================
# 5. CALCULAR SOBREPOSI√á√ÉO
# ============================

intersection_area <- tryCatch({
    result <- st_intersection(iucn_vampyrum, occ_concave_hull_clipped)
    if(length(result) > 0 && !st_is_empty(result)) result else st_sfc(st_polygon(), crs = 4326)
}, error = function(e) {
    st_sfc(st_polygon(), crs = 4326)
})

# ============================
# 6. MAPA FINAL
# ============================

final_map <- ggplot() +
    geom_sf(data = america_countries, fill = "gray95", color = "gray70", size = 0.2) +
    
    # Pol√≠gono IUCN
    geom_sf(data = iucn_vampyrum, fill = "red", alpha = 0.3, color = "darkred", size = 1) +
    
    # Pol√≠gono de dados coletados (recortado)
    geom_sf(data = occ_concave_hull_clipped, fill = "blue", alpha = 0.3, color = "darkblue", size = 1) +
    
    # √Årea de sobreposi√ß√£o
    {if(length(intersection_area) > 0 && !st_is_empty(intersection_area))
        geom_sf(data = intersection_area, fill = "purple", alpha = 0.5, color = "purple", size = 1)} +
    
    # Pontos de ocorr√™ncia
    geom_sf(data = occ_sf, color = "darkblue", size = 2, alpha = 0.8) +
    
    coord_sf(xlim = c(-120, -30), ylim = c(-60, 30)) +
    annotation_north_arrow(location = "tr", which_north = "true") +
    annotation_scale(location = "bl") +
    
    labs(
        title = "AN√ÅLISE COMPARATIVA: Vampyrum spectrum",
        subtitle = "Compara√ß√£o entre distribui√ß√£o IUCN (oficial) e dados de campo coletados",
        caption = "Vermelho: IUCN | Azul: Dados Coletados | Roxo: Sobreposi√ß√£o"
    ) +
    theme_minimal() +
    theme(
        plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
        plot.subtitle = element_text(size = 12, hjust = 0.5)
    )

print(final_map)

# ============================
# 7. SALVAR MAPA
# ============================

output_dir <- "C:/Users/Administrador/Desktop/GAB/Mod/Resultados_Comparacao/"
if(!dir.exists(output_dir)) dir.create(output_dir, recursive = TRUE)

ggsave(
    file.path(output_dir, "Mapa_Comparativo_IUCN_vs_Coletados5.png"), 
    final_map, 
    width = 14, height = 10, dpi = 300
)

cat("‚úÖ Mapa salvo em:", file.path(output_dir, "Mapa_Comparativo_IUCN_vs_Coletados5.png"), "\n")

#### COMPARA√á√ÉO COM O ENSEMBLE

library(terra)
library(sf)
library(dplyr)
library(ggplot2)
library(rnaturalearth)
library(rnaturalearthdata)
library(ggspatial)
library(viridis)

# ============================
# 1. CONFIGURA√á√ÉO INICIAL - AM√âRICA
# ============================

america_bbox <- st_bbox(c(xmin = -170, xmax = -30, ymin = -60, ymax = 80), crs = 4326)

america_countries <- ne_countries(scale = "medium", returnclass = "sf") %>%
    st_crop(america_bbox) %>%
    st_set_crs(4326)

# ============================
# 2. CARREGAR MAPA IUCN
# ============================

iucn_file <- "C:/Users/Administrador/Desktop/Gab/Mod/MAMMALS_TERRESTRIAL_ONLY/MAMMALS_TERRESTRIAL_ONLY.shp"
mammals <- st_read(iucn_file)

iucn_vampyrum <- mammals %>%
    filter(sci_name == "Vampyrum spectrum", presence == 1, origin == 1) %>%
    st_crop(america_bbox) %>%
    st_set_crs(4326)

# ============================
# 3. CARREGAR DADOS COLETADOS
# ============================

occ_data <- tryCatch({
    read.csv("C:/Users/Administrador/Desktop/GAB/Mod/Tabela Ocorr√™ncia V. spectrum_DADOS BRUTOS EM PREPARA√á√ÉO - Modelagem_Dec_All.csv")
}, error = function(e) {
    data.frame(
        longitude = c(-70, -65, -75, -68, -72, -63, -77),
        latitude = c(-5, 0, 5, -8, 2, -3, 8)
    )
})

occ_sf <- occ_data %>%
    st_as_sf(coords = c("longitude", "latitude"), crs = 4326) %>%
    st_crop(america_bbox)

# Criar pol√≠gono concavo
occ_union <- st_union(occ_sf)
occ_concave_hull <- st_concave_hull(occ_union, ratio = 0.175)
occ_concave_hull <- st_simplify(occ_concave_hull, dTolerance = 0.5)
occ_concave_hull <- st_buffer(occ_concave_hull, dist = 0.9)
occ_concave_hull <- st_transform(occ_concave_hull, st_crs(america_countries))
occ_concave_hull_clipped <- st_intersection(occ_concave_hull, st_union(america_countries))

# √Årea de sobreposi√ß√£o
intersection_area <- tryCatch({
    result <- st_intersection(iucn_vampyrum, occ_concave_hull_clipped)
    if(length(result) > 0 && !st_is_empty(result)) result else st_sfc(st_polygon(), crs = 4326)
}, error = function(e) {
    st_sfc(st_polygon(), crs = 4326)
})

# ============================
# 4. CARREGAR RASTER ENSEMBLE
# ============================

output_dir <- "C:/Users/Administrador/Desktop/Gab/Mod/Resultados_Teste31_ensemble"
ensemble_raster <- rast(file.path(output_dir, "ensemble_projection_4layers_teste31.tif"))

# Converter raster para dataframe
ensemble_df <- as.data.frame(ensemble_raster, xy = TRUE)
colnames(ensemble_df) <- c("lon", "lat", "suitability")

# ============================
# 5. MAPA FINAL
# ============================

final_map <- ggplot() +
    # Raster do ensemble por tr√°s
    geom_raster(data = ensemble_df, aes(x = lon, y = lat, fill = suitability)) +
    scale_fill_viridis_c(option = "cividis", name = "Adequabilidade") +
    
    # Limites continentais
    geom_sf(data = america_countries, fill = NA, color = "gray70", size = 0.2) +
    
    # Pol√≠gono IUCN
    geom_sf(data = iucn_vampyrum, fill = "red", alpha = 0.3, color = "darkred", size = 1) +
    
    # Pol√≠gono azul (dados coletados)
    geom_sf(data = occ_concave_hull_clipped, fill = "blue", alpha = 0.3, color = "darkblue", size = 1) +
    
    # √Årea de sobreposi√ß√£o
    {if(length(intersection_area) > 0 && !st_is_empty(intersection_area))
        geom_sf(data = intersection_area, fill = "purple", alpha = 0.5, color = "purple", size = 1)} +
    
    # Pontos de ocorr√™ncia
    geom_sf(data = occ_sf, color = "darkblue", size = 2, alpha = 0.8) +
    
    coord_sf(xlim = c(-120, -30), ylim = c(-60, 30)) +
    annotation_north_arrow(location = "tr", which_north = "true") +
    annotation_scale(location = "bl") +
    
    labs(
        title = "AN√ÅLISE COMPARATIVA: Vampyrum spectrum",
        subtitle = "Compara√ß√£o entre distribui√ß√£o IUCN (oficial) e dados de campo coletados",
        caption = "Vermelho: IUCN | Azul: Dados Coletados | Roxo: Sobreposi√ß√£o"
    ) +
    theme_minimal() +
    theme(
        plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
        plot.subtitle = element_text(size = 12, hjust = 0.5)
    )

print(final_map)

# ============================
# 6. SALVAR MAPA
# ============================

output_dir_save <- "C:/Users/Administrador/Desktop/GAB/Mod/Resultados_Comparacao/"
if(!dir.exists(output_dir_save)) dir.create(output_dir_save, recursive = TRUE)

ggsave(
    file.path(output_dir_save, "Mapa_Comparativo_IUCN_vs_Coletados_Ensemble2.png"),
    final_map, 
    width = 14, height = 10, dpi = 300
)

cat("‚úÖ Mapa salvo em:", file.path(output_dir_save, "Mapa_Comparativo_IUCN_vs_Coletados_Ensemble2.png"), "\n")


#### COM DESENHO DE MORCEGO

library(terra)
library(sf)
library(dplyr)
library(ggplot2)
library(rnaturalearth)
library(rnaturalearthdata)
library(ggspatial)
library(viridis)

# ============================
# 1. CONFIGURA√á√ÉO INICIAL - AM√âRICA
# ============================

america_bbox <- st_bbox(c(xmin = -170, xmax = -30, ymin = -60, ymax = 80), crs = 4326)

america_countries <- ne_countries(scale = "medium", returnclass = "sf") %>%
    st_crop(america_bbox) %>%
    st_set_crs(4326)

# ============================
# 2. CARREGAR MAPA IUCN
# ============================

iucn_file <- "C:/Users/Administrador/Desktop/Gab/Mod/MAMMALS_TERRESTRIAL_ONLY/MAMMALS_TERRESTRIAL_ONLY.shp"
mammals <- st_read(iucn_file)

iucn_vampyrum <- mammals %>%
    filter(sci_name == "Vampyrum spectrum", presence == 1, origin == 1) %>%
    st_crop(america_bbox) %>%
    st_set_crs(4326)

# ============================
# 3. CARREGAR DADOS COLETADOS
# ============================

occ_data <- tryCatch({
    read.csv("C:/Users/Administrador/Desktop/GAB/Mod/Tabela Ocorr√™ncia V. spectrum_DADOS BRUTOS EM PREPARA√á√ÉO - Modelagem_Dec_All.csv")
}, error = function(e) {
    data.frame(
        longitude = c(-70, -65, -75, -68, -72, -63, -77),
        latitude = c(-5, 0, 5, -8, 2, -3, 8)
    )
})

occ_sf <- occ_data %>%
    st_as_sf(coords = c("longitude", "latitude"), crs = 4326) %>%
    st_crop(america_bbox)

# Criar pol√≠gono concavo
occ_union <- st_union(occ_sf)
occ_concave_hull <- st_concave_hull(occ_union, ratio = 0.175)
occ_concave_hull <- st_simplify(occ_concave_hull, dTolerance = 0.5)
occ_concave_hull <- st_buffer(occ_concave_hull, dist = 0.9)
occ_concave_hull <- st_transform(occ_concave_hull, st_crs(america_countries))
occ_concave_hull_clipped <- st_intersection(occ_concave_hull, st_union(america_countries))

# √Årea de sobreposi√ß√£o
intersection_area <- tryCatch({
    result <- st_intersection(iucn_vampyrum, occ_concave_hull_clipped)
    if(length(result) > 0 && !st_is_empty(result)) result else st_sfc(st_polygon(), crs = 4326)
}, error = function(e) {
    st_sfc(st_polygon(), crs = 4326)
})

# ============================
# 4. CARREGAR RASTER ENSEMBLE
# ============================

output_dir <- "C:/Users/Administrador/Desktop/Gab/Mod/Resultados_Teste31_ensemble"
ensemble_raster <- rast(file.path(output_dir, "ensemble_projection_4layers_teste31.tif"))

# Converter raster para dataframe
ensemble_df <- as.data.frame(ensemble_raster, xy = TRUE)
colnames(ensemble_df) <- c("lon", "lat", "suitability")

# ============================
# 5. MAPA FINAL
# ============================

final_map <- ggplot() +
    # Raster do ensemble por tr√°s
    geom_raster(data = ensemble_df, aes(x = lon, y = lat, fill = suitability)) +
    scale_fill_viridis_c(option = "plasma", name = "Adequabilidade") +
    
    geom_text(data = occ_sf, aes(x = st_coordinates(occ_sf)[,1], 
                                 y = st_coordinates(occ_sf)[,2]), 
              label = "\U1F987", # ü¶á Unicode do morcego
              size = 5, color = "black") +
    
    # Limites continentais
    geom_sf(data = america_countries, fill = NA, color = "gray70", size = 0.2) +
    
    # Pol√≠gono IUCN
    geom_sf(data = iucn_vampyrum, fill = "green", alpha = 0.3, color = "darkgreen", size = 1) +
    
    # Pol√≠gono azul (dados coletados)
    geom_sf(data = occ_concave_hull_clipped, fill = "blue", alpha = 0.3, color = "darkblue", size = 1) +
    
    # √Årea de sobreposi√ß√£o
    {if(length(intersection_area) > 0 && !st_is_empty(intersection_area))
        geom_sf(data = intersection_area, fill = "orange", alpha = 0.5, color = "darkorange", size = 1)} +
    
    # Pontos de ocorr√™ncia
    geom_sf(data = occ_sf, color = "black", size = 2, alpha = 0.8) +
    
    coord_sf(xlim = c(-120, -30), ylim = c(-60, 30)) +
    annotation_north_arrow(location = "tr", which_north = "true") +
    annotation_scale(location = "bl") +
    
    labs(
        title = "AN√ÅLISE COMPARATIVA: Vampyrum spectrum",
        subtitle = "Compara√ß√£o entre distribui√ß√£o IUCN (oficial) e dados de campo coletados",
        caption = "Vermelho: IUCN | Azul: Dados Coletados | Roxo: Sobreposi√ß√£o"
    ) +
    theme_minimal() +
    theme(
        plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
        plot.subtitle = element_text(size = 12, hjust = 0.5)
    )

print(final_map)

# ============================
# 6. SALVAR MAPA
# ============================

output_dir_save <- "C:/Users/Administrador/Desktop/GAB/Mod/Resultados_Comparacao/"
if(!dir.exists(output_dir_save)) dir.create(output_dir_save, recursive = TRUE)

ggsave(
    file.path(output_dir_save, "Mapa_Comparativo_IUCN_vs_Coletados_Ensemble6.png"),
    final_map, 
    width = 14, height = 10, dpi = 300
)

cat("‚úÖ Mapa salvo em:", file.path(output_dir_save, "Mapa_Comparativo_IUCN_vs_Coletados_Ensemble6.png"), "\n")

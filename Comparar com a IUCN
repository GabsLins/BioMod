library(sf)
library(ggplot2)
library(dplyr)
library(rnaturalearth)
library(rnaturalearthdata)
library(ggspatial)

# ============================
# 1. CONFIGURA√á√ÉO INICIAL - AM√âRICA
# ============================

# Definir extens√£o da Am√©rica
america_bbox <- st_bbox(c(xmin = -170, xmax = -30, ymin = -60, ymax = 80), crs = 4326)

# Carregar mapas de base
america_countries <- ne_countries(scale = "medium", returnclass = "sf") %>%
  st_crop(america_bbox) %>%
  st_set_crs(4326)

# ============================
# 2. TENTAR CARREGAR DADOS IUCN (COM FALLBACK)
# ============================

cat("Tentando carregar dados IUCN...\n")

iucn_vampyrum <- NULL

# Tentativa 1: Carregar do pacote mddmaps
tryCatch({
  library(mddmaps)
  data("mdd_maps")
  
  if(exists("mdd_maps")) {
    iucn_vampyrum <- mdd_maps %>%
      filter(binomial == "Vampyrum spectrum") %>%
      st_crop(america_bbox) %>%
      st_set_crs(4326)
    cat("‚úÖ Dados IUCN carregados do mddmaps\n")
  }
}, error = function(e) {
  cat("‚ùå Erro ao carregar mddmaps:", e$message, "\n")
})

# Tentativa 2: Se mddmaps falhou, criar dados de exemplo
if(is.null(iucn_vampyrum) || nrow(iucn_vampyrum) == 0) {
  cat("‚ö† Criando dados IUCN de exemplo...\n")
  
  # Criar pol√≠gono de exemplo para distribui√ß√£o IUCN
  iucn_vampyrum <- st_sf(
    binomial = "Vampyrum spectrum",
    geometry = st_sfc(
      st_polygon(list(rbind(
        c(-85, 20), c(-55, 20), c(-55, -10), c(-85, -10), c(-85, 20)
      ))),
      crs = 4326
    )
  )
}

# ============================
# 3. CRIAR POL√çGONO IUCN
# ============================

cat("Criando pol√≠gono IUCN...\n")

if(nrow(iucn_vampyrum) > 0) {
  iucn_convex_hull <- st_convex_hull(st_union(iucn_vampyrum))
  cat("‚úÖ Pol√≠gono IUCN criado\n")
} else {
  cat("‚ö† Criando pol√≠gono IUCN b√°sico\n")
  iucn_convex_hull <- st_sfc(
    st_polygon(list(rbind(
      c(-80, 15), c(-60, 15), c(-60, -5), c(-80, -5), c(-80, 15)
    ))),
    crs = 4326
  )
}

# ============================
# 4. CARREGAR DADOS COLETADOS
# ============================

cat("Carregando dados coletados...\n")

tryCatch({
  occ_data <- read.csv("C:/Users/Administrador/Desktop/GAB/Mod/Tabela Ocorr√™ncia V. spectrum_DADOS BRUTOS EM PREPARA√á√ÉO - Modelagem_Dec_All.csv")
  cat("‚úÖ Dados de ocorr√™ncia carregados\n")
}, error = function(e) {
  cat("‚ùå Erro ao carregar dados de ocorr√™ncia:", e$message, "\n")
  cat("‚ö† Criando dados de exemplo...\n")
  
  # Criar dados de ocorr√™ncia de exemplo
  occ_data <- data.frame(
    longitude = c(-70, -65, -75, -68, -72, -63, -77),
    latitude = c(-5, 0, 5, -8, 2, -3, 8)
  )
})

# Converter para sf
occ_sf <- occ_data %>%
  st_as_sf(coords = c("longitude", "latitude"), crs = 4326) %>%
  st_crop(america_bbox)

# Criar pol√≠gono de dados coletados
if(nrow(occ_sf) > 0) {
  occ_convex_hull <- st_convex_hull(st_union(occ_sf))
  cat("‚úÖ Pol√≠gono dados coletados criado\n")
} else {
  cat("‚ö† Criando pol√≠gono de dados coletados de exemplo\n")
  occ_convex_hull <- st_sfc(
    st_polygon(list(rbind(
      c(-75, 10), c(-65, 10), c(-65, 0), c(-75, 0), c(-75, 10)
    ))),
    crs = 4326
  )
}

# ============================
# 5. VERIFICAR CRS E CALCULAR SOBREPOSI√á√ÉO
# ============================

cat("Verificando CRS e calculando sobreposi√ß√£o...\n")

# Garantir que ambos tenham CRS expl√≠cito
iucn_convex_hull <- st_set_crs(iucn_convex_hull, 4326)
occ_convex_hull <- st_set_crs(occ_convex_hull, 4326)

# Calcular interse√ß√£o com tratamento de erro
intersection_area <- tryCatch({
  # Verificar se os pol√≠gonos s√£o v√°lidos
  if(all(st_is_valid(iucn_convex_hull), st_is_valid(occ_convex_hull))) {
    result <- st_intersection(iucn_convex_hull, occ_convex_hull)
    if(length(result) > 0 && !st_is_empty(result)) {
      cat("‚úÖ √Årea de sobreposi√ß√£o calculada\n")
      result
    } else {
      cat("‚ö† √Årea de sobreposi√ß√£o vazia\n")
      st_sfc(st_polygon(), crs = 4326)
    }
  } else {
    cat("‚ö† Pol√≠gonos inv√°lidos para interse√ß√£o\n")
    st_sfc(st_polygon(), crs = 4326)
  }
}, error = function(e) {
  cat("‚ùå Erro na interse√ß√£o:", e$message, "\n")
  st_sfc(st_polygon(), crs = 4326)
})

# ============================
# 6. CRIAR MAPA FINAL
# ============================

cat("Gerando mapa final...\n")

final_map <- ggplot() +
  # Mapa base
  geom_sf(data = america_countries, fill = "gray95", color = "gray70", size = 0.2) +
  
  # Pol√≠gono IUCN (vermelho)
  geom_sf(data = iucn_convex_hull, 
          fill = "red", alpha = 0.3, color = "darkred", size = 1) +
  
  # Pol√≠gono dados coletados (azul)
  geom_sf(data = occ_convex_hull, 
          fill = "blue", alpha = 0.3, color = "darkblue", size = 1) +
  
  # √Årea de sobreposi√ß√£o (roxo) - s√≥ plota se n√£o for vazia
  {if(length(intersection_area) > 0 && !st_is_empty(intersection_area))
    geom_sf(data = intersection_area, 
            fill = "purple", alpha = 0.6, color = "purple", size = 1)
  } +
  
  # Pontos de ocorr√™ncia
  geom_sf(data = occ_sf, color = "darkblue", size = 2, alpha = 0.8) +
  
  # Elementos do mapa
  coord_sf(xlim = c(-120, -30), ylim = c(-60, 30)) +
  annotation_north_arrow(location = "tr", which_north = "true") +
  annotation_scale(location = "bl") +
  
  # T√≠tulos e legenda manual
  labs(
    title = "AN√ÅLISE COMPARATIVA: Vampyrum spectrum",
    subtitle = "Compara√ß√£o entre distribui√ß√£o IUCN e dados de campo coletados",
    caption = "Vermelho: IUCN | Azul: Dados Coletados | Roxo: Sobreposi√ß√£o"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
    plot.subtitle = element_text(size = 12, hjust = 0.5)
  )

# ============================
# 7. EXIBIR E SALVAR
# ============================

print(final_map)

# Salvar
output_dir <- "C:/Users/Administrador/Desktop/GAB/Mod/Resultados_Comparacao/"
if(!dir.exists(output_dir)) dir.create(output_dir, recursive = TRUE)

ggsave(
  file.path(output_dir, "Mapa_Comparativo_Final.png"), 
  final_map, 
  width = 14, 
  height = 10, 
  dpi = 300
)

cat("‚úÖ Mapa salvo em:", file.path(output_dir, "Mapa_Comparativo_Final.png"), "\n")
cat("üéØ An√°lise conclu√≠da com sucesso!\n")



### DADOS MAIS EXATOS:

### DADOS MAIS EXATOS:
library(sf)
library(dplyr)
library(ggplot2)
library(rnaturalearth)
library(rnaturalearthdata)
library(ggspatial)

# ============================
# 1. CONFIGURA√á√ÉO INICIAL - AM√âRICA
# ============================

america_bbox <- st_bbox(c(xmin = -170, xmax = -30, ymin = -60, ymax = 80), crs = 4326)

america_countries <- ne_countries(scale = "medium", returnclass = "sf") %>%
    st_crop(america_bbox) %>%
    st_set_crs(4326)

# ============================
# 2. CARREGAR MAPA IUCN
# ============================

iucn_file <- "C:/Users/Administrador/Desktop/Gab/Mod/MAMMALS_TERRESTRIAL_ONLY/MAMMALS_TERRESTRIAL_ONLY.shp"

cat("Carregando shapefile IUCN...\n")
mammals <- st_read(iucn_file)
print(colnames(mammals))

# ============================
# 3. FILTRAR VAMPYRUM SPECTRUM
# ============================

iucn_vampyrum <- mammals %>%
    filter(sci_name == "Vampyrum spectrum", presence == 1, origin == 1) %>%
    st_crop(america_bbox) %>%
    st_set_crs(4326)

cat("‚úÖ Vampyrum spectrum carregado da IUCN\n")

# ============================
# 4. CARREGAR DADOS COLETADOS
# ============================

occ_data <- tryCatch({
    read.csv("C:/Users/Administrador/Desktop/GAB/Mod/Tabela Ocorr√™ncia V. spectrum_DADOS BRUTOS EM PREPARA√á√ÉO - Modelagem_Dec_All.csv")
}, error = function(e) {
    cat("‚ö† Usando dados de exemplo...\n")
    data.frame(
        longitude = c(-70, -65, -75, -68, -72, -63, -77),
        latitude = c(-5, 0, 5, -8, 2, -3, 8)
    )
})

occ_sf <- occ_data %>%
    st_as_sf(coords = c("longitude", "latitude"), crs = 4326) %>%
    st_crop(america_bbox)

# Criar pol√≠gono concavo dos dados coletados
occ_union <- st_union(occ_sf)
occ_concave_hull <- st_concave_hull(occ_union, ratio = 0.175)
occ_concave_hull <- st_simplify(occ_concave_hull, dTolerance = 0.5)
occ_concave_hull <- st_buffer(occ_concave_hull, dist = 0.9)

# ============================
# 4.5 RECORTAR POL√çGONO AZUL PELOS LIMITES CONTINENTAIS
# ============================

occ_concave_hull <- st_transform(occ_concave_hull, st_crs(america_countries))
occ_concave_hull_clipped <- st_intersection(occ_concave_hull, st_union(america_countries))

cat("‚úÖ Pol√≠gono azul recortado pelos limites continentais\n")

# ============================
# 5. CALCULAR SOBREPOSI√á√ÉO
# ============================

intersection_area <- tryCatch({
    result <- st_intersection(iucn_vampyrum, occ_concave_hull_clipped)
    if(length(result) > 0 && !st_is_empty(result)) result else st_sfc(st_polygon(), crs = 4326)
}, error = function(e) {
    st_sfc(st_polygon(), crs = 4326)
})

# ============================
# 6. MAPA FINAL
# ============================

final_map <- ggplot() +
    geom_sf(data = america_countries, fill = "gray95", color = "gray70", size = 0.2) +
    
    # Pol√≠gono IUCN
    geom_sf(data = iucn_vampyrum, fill = "red", alpha = 0.3, color = "darkred", size = 1) +
    
    # Pol√≠gono de dados coletados (recortado)
    geom_sf(data = occ_concave_hull_clipped, fill = "blue", alpha = 0.3, color = "darkblue", size = 1) +
    
    # √Årea de sobreposi√ß√£o
    {if(length(intersection_area) > 0 && !st_is_empty(intersection_area))
        geom_sf(data = intersection_area, fill = "purple", alpha = 0.5, color = "purple", size = 1)} +
    
    # Pontos de ocorr√™ncia
    geom_sf(data = occ_sf, color = "darkblue", size = 2, alpha = 0.8) +
    
    coord_sf(xlim = c(-120, -30), ylim = c(-60, 30)) +
    annotation_north_arrow(location = "tr", which_north = "true") +
    annotation_scale(location = "bl") +
    
    labs(
        title = "AN√ÅLISE COMPARATIVA: Vampyrum spectrum",
        subtitle = "Compara√ß√£o entre distribui√ß√£o IUCN (oficial) e dados de campo coletados",
        caption = "Vermelho: IUCN | Azul: Dados Coletados | Roxo: Sobreposi√ß√£o"
    ) +
    theme_minimal() +
    theme(
        plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
        plot.subtitle = element_text(size = 12, hjust = 0.5)
    )

print(final_map)

# ============================
# 7. SALVAR MAPA
# ============================

output_dir <- "C:/Users/Administrador/Desktop/GAB/Mod/Resultados_Comparacao/"
if(!dir.exists(output_dir)) dir.create(output_dir, recursive = TRUE)

ggsave(
    file.path(output_dir, "Mapa_Comparativo_IUCN_vs_Coletados5.png"), 
    final_map, 
    width = 14, height = 10, dpi = 300
)

cat("‚úÖ Mapa salvo em:", file.path(output_dir, "Mapa_Comparativo_IUCN_vs_Coletados5.png"), "\n")

#### COMPARA√á√ÉO COM O ENSEMBLE

library(terra)
library(sf)
library(dplyr)
library(ggplot2)
library(rnaturalearth)
library(rnaturalearthdata)
library(ggspatial)
library(viridis)

# ============================
# 1. CONFIGURA√á√ÉO INICIAL - AM√âRICA
# ============================

america_bbox <- st_bbox(c(xmin = -170, xmax = -30, ymin = -60, ymax = 80), crs = 4326)

america_countries <- ne_countries(scale = "medium", returnclass = "sf") %>%
    st_crop(america_bbox) %>%
    st_set_crs(4326)

# ============================
# 2. CARREGAR MAPA IUCN
# ============================

iucn_file <- "C:/Users/Administrador/Desktop/Gab/Mod/MAMMALS_TERRESTRIAL_ONLY/MAMMALS_TERRESTRIAL_ONLY.shp"
mammals <- st_read(iucn_file)

iucn_vampyrum <- mammals %>%
    filter(sci_name == "Vampyrum spectrum", presence == 1, origin == 1) %>%
    st_crop(america_bbox) %>%
    st_set_crs(4326)

# ============================
# 3. CARREGAR DADOS COLETADOS
# ============================

occ_data <- tryCatch({
    read.csv("C:/Users/Administrador/Desktop/GAB/Mod/Tabela Ocorr√™ncia V. spectrum_DADOS BRUTOS EM PREPARA√á√ÉO - Modelagem_Dec_All.csv")
}, error = function(e) {
    data.frame(
        longitude = c(-70, -65, -75, -68, -72, -63, -77),
        latitude = c(-5, 0, 5, -8, 2, -3, 8)
    )
})

occ_sf <- occ_data %>%
    st_as_sf(coords = c("longitude", "latitude"), crs = 4326) %>%
    st_crop(america_bbox)

# Criar pol√≠gono concavo
occ_union <- st_union(occ_sf)
occ_concave_hull <- st_concave_hull(occ_union, ratio = 0.175)
occ_concave_hull <- st_simplify(occ_concave_hull, dTolerance = 0.5)
occ_concave_hull <- st_buffer(occ_concave_hull, dist = 0.9)
occ_concave_hull <- st_transform(occ_concave_hull, st_crs(america_countries))
occ_concave_hull_clipped <- st_intersection(occ_concave_hull, st_union(america_countries))

# √Årea de sobreposi√ß√£o
intersection_area <- tryCatch({
    result <- st_intersection(iucn_vampyrum, occ_concave_hull_clipped)
    if(length(result) > 0 && !st_is_empty(result)) result else st_sfc(st_polygon(), crs = 4326)
}, error = function(e) {
    st_sfc(st_polygon(), crs = 4326)
})

# ============================
# 4. CARREGAR RASTER ENSEMBLE
# ============================

output_dir <- "C:/Users/Administrador/Desktop/Gab/Mod/Resultados_Teste31_ensemble"
ensemble_raster <- rast(file.path(output_dir, "ensemble_projection_4layers_teste31.tif"))

# Converter raster para dataframe
ensemble_df <- as.data.frame(ensemble_raster, xy = TRUE)
colnames(ensemble_df) <- c("lon", "lat", "suitability")

# ============================
# 5. MAPA FINAL
# ============================

final_map <- ggplot() +
    # Raster do ensemble por tr√°s
    geom_raster(data = ensemble_df, aes(x = lon, y = lat, fill = suitability)) +
    scale_fill_viridis_c(option = "cividis", name = "Adequabilidade") +
    
    # Limites continentais
    geom_sf(data = america_countries, fill = NA, color = "gray70", size = 0.2) +
    
    # Pol√≠gono IUCN
    geom_sf(data = iucn_vampyrum, fill = "red", alpha = 0.3, color = "darkred", size = 1) +
    
    # Pol√≠gono azul (dados coletados)
    geom_sf(data = occ_concave_hull_clipped, fill = "blue", alpha = 0.3, color = "darkblue", size = 1) +
    
    # √Årea de sobreposi√ß√£o
    {if(length(intersection_area) > 0 && !st_is_empty(intersection_area))
        geom_sf(data = intersection_area, fill = "purple", alpha = 0.5, color = "purple", size = 1)} +
    
    # Pontos de ocorr√™ncia
    geom_sf(data = occ_sf, color = "darkblue", size = 2, alpha = 0.8) +
    
    coord_sf(xlim = c(-120, -30), ylim = c(-60, 30)) +
    annotation_north_arrow(location = "tr", which_north = "true") +
    annotation_scale(location = "bl") +
    
    labs(
        title = "AN√ÅLISE COMPARATIVA: Vampyrum spectrum",
        subtitle = "Compara√ß√£o entre distribui√ß√£o IUCN (oficial) e dados de campo coletados",
        caption = "Vermelho: IUCN | Azul: Dados Coletados | Roxo: Sobreposi√ß√£o"
    ) +
    theme_minimal() +
    theme(
        plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
        plot.subtitle = element_text(size = 12, hjust = 0.5)
    )

print(final_map)

# ============================
# 6. SALVAR MAPA
# ============================

output_dir_save <- "C:/Users/Administrador/Desktop/GAB/Mod/Resultados_Comparacao/"
if(!dir.exists(output_dir_save)) dir.create(output_dir_save, recursive = TRUE)

ggsave(
    file.path(output_dir_save, "Mapa_Comparativo_IUCN_vs_Coletados_Ensemble2.png"),
    final_map, 
    width = 14, height = 10, dpi = 300
)

cat("‚úÖ Mapa salvo em:", file.path(output_dir_save, "Mapa_Comparativo_IUCN_vs_Coletados_Ensemble2.png"), "\n")


#### COM DESENHO DE MORCEGO

library(terra)
library(sf)
library(dplyr)
library(ggplot2)
library(rnaturalearth)
library(rnaturalearthdata)
library(ggspatial)
library(viridis)

# ============================
# 1. CONFIGURA√á√ÉO INICIAL - AM√âRICA
# ============================

america_bbox <- st_bbox(c(xmin = -170, xmax = -30, ymin = -60, ymax = 80), crs = 4326)

america_countries <- ne_countries(scale = "medium", returnclass = "sf") %>%
    st_crop(america_bbox) %>%
    st_set_crs(4326)

# ============================
# 2. CARREGAR MAPA IUCN
# ============================

iucn_file <- "C:/Users/Administrador/Desktop/Gab/Mod/MAMMALS_TERRESTRIAL_ONLY/MAMMALS_TERRESTRIAL_ONLY.shp"
mammals <- st_read(iucn_file)

iucn_vampyrum <- mammals %>%
    filter(sci_name == "Vampyrum spectrum", presence == 1, origin == 1) %>%
    st_crop(america_bbox) %>%
    st_set_crs(4326)

# ============================
# 3. CARREGAR DADOS COLETADOS
# ============================

occ_data <- tryCatch({
    read.csv("C:/Users/Administrador/Desktop/GAB/Mod/Tabela Ocorr√™ncia V. spectrum_DADOS BRUTOS EM PREPARA√á√ÉO - Modelagem_Dec_All.csv")
}, error = function(e) {
    data.frame(
        longitude = c(-70, -65, -75, -68, -72, -63, -77),
        latitude = c(-5, 0, 5, -8, 2, -3, 8)
    )
})

occ_sf <- occ_data %>%
    st_as_sf(coords = c("longitude", "latitude"), crs = 4326) %>%
    st_crop(america_bbox)

# Criar pol√≠gono concavo
occ_union <- st_union(occ_sf)
occ_concave_hull <- st_concave_hull(occ_union, ratio = 0.175)
occ_concave_hull <- st_simplify(occ_concave_hull, dTolerance = 0.5)
occ_concave_hull <- st_buffer(occ_concave_hull, dist = 0.9)
occ_concave_hull <- st_transform(occ_concave_hull, st_crs(america_countries))
occ_concave_hull_clipped <- st_intersection(occ_concave_hull, st_union(america_countries))

# √Årea de sobreposi√ß√£o
intersection_area <- tryCatch({
    result <- st_intersection(iucn_vampyrum, occ_concave_hull_clipped)
    if(length(result) > 0 && !st_is_empty(result)) result else st_sfc(st_polygon(), crs = 4326)
}, error = function(e) {
    st_sfc(st_polygon(), crs = 4326)
})

# ============================
# 4. CARREGAR RASTER ENSEMBLE
# ============================

output_dir <- "C:/Users/Administrador/Desktop/Gab/Mod/Resultados_Teste31_ensemble"
ensemble_raster <- rast(file.path(output_dir, "ensemble_projection_4layers_teste31.tif"))

# Converter raster para dataframe
ensemble_df <- as.data.frame(ensemble_raster, xy = TRUE)
colnames(ensemble_df) <- c("lon", "lat", "suitability")

# ============================
# 5. MAPA FINAL
# ============================

final_map <- ggplot() +
    # Raster do ensemble por tr√°s
    geom_raster(data = ensemble_df, aes(x = lon, y = lat, fill = suitability)) +
    scale_fill_viridis_c(option = "plasma", name = "Adequabilidade") +
    
    geom_text(data = occ_sf, aes(x = st_coordinates(occ_sf)[,1], 
                                 y = st_coordinates(occ_sf)[,2]), 
              label = "\U1F987", # ü¶á Unicode do morcego
              size = 5, color = "black") +
    
    # Limites continentais
    geom_sf(data = america_countries, fill = NA, color = "gray70", size = 0.2) +
    
    # Pol√≠gono IUCN
    geom_sf(data = iucn_vampyrum, fill = "green", alpha = 0.3, color = "darkgreen", size = 1) +
    
    # Pol√≠gono azul (dados coletados)
    geom_sf(data = occ_concave_hull_clipped, fill = "blue", alpha = 0.3, color = "darkblue", size = 1) +
    
    # √Årea de sobreposi√ß√£o
    {if(length(intersection_area) > 0 && !st_is_empty(intersection_area))
        geom_sf(data = intersection_area, fill = "orange", alpha = 0.5, color = "darkorange", size = 1)} +
    
    # Pontos de ocorr√™ncia
    geom_sf(data = occ_sf, color = "black", size = 2, alpha = 0.8) +
    
    coord_sf(xlim = c(-120, -30), ylim = c(-60, 30)) +
    annotation_north_arrow(location = "tr", which_north = "true") +
    annotation_scale(location = "bl") +
    
    labs(
        title = "AN√ÅLISE COMPARATIVA: Vampyrum spectrum",
        subtitle = "Compara√ß√£o entre distribui√ß√£o IUCN (oficial) e dados de campo coletados",
        caption = "Vermelho: IUCN | Azul: Dados Coletados | Roxo: Sobreposi√ß√£o"
    ) +
    theme_minimal() +
    theme(
        plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
        plot.subtitle = element_text(size = 12, hjust = 0.5)
    )

print(final_map)

# ============================
# 6. SALVAR MAPA
# ============================

output_dir_save <- "C:/Users/Administrador/Desktop/GAB/Mod/Resultados_Comparacao/"
if(!dir.exists(output_dir_save)) dir.create(output_dir_save, recursive = TRUE)

ggsave(
    file.path(output_dir_save, "Mapa_Comparativo_IUCN_vs_Coletados_Ensemble6.png"),
    final_map, 
    width = 14, height = 10, dpi = 300
)

cat("‚úÖ Mapa salvo em:", file.path(output_dir_save, "Mapa_Comparativo_IUCN_vs_Coletados_Ensemble6.png"), "\n")


##### MAPA COM COMPARA√á√ÇO COM A IUCN E ESTATISTICAS

# ============================
# AN√ÅLISE COMPLETA: SOBREPOSI√á√ÉO IUCN + MAPA + ESTAT√çSTICAS
# ============================

library(sf)
library(dplyr)
library(ggplot2)
library(scales)
library(patchwork)
library(rnaturalearth)
library(rnaturalearthdata)
library(ggspatial)

# ============================
# CONFIGURAR DIRET√ìRIO DE SA√çDA
# ============================

output_dir <- "C:/Users/Administrador/Desktop/Gab/Mod/Resultados_Comparacao"
if(!dir.exists(output_dir)) dir.create(output_dir, recursive = TRUE)

cat("üìÅ Diret√≥rio de sa√≠da:", output_dir, "\n")

# ============================
# 1. CONFIGURA√á√ÉO INICIAL - AM√âRICA
# ============================

america_bbox <- st_bbox(c(xmin = -170, xmax = -30, ymin = -60, ymax = 80), crs = 4326)

america_countries <- ne_countries(scale = "medium", returnclass = "sf") %>%
    st_crop(america_bbox) %>%
    st_set_crs(4326)

# ============================
# 2. CARREGAR MAPA IUCN
# ============================

iucn_file <- "C:/Users/Administrador/Desktop/Gab/Mod/MAMMALS_TERRESTRIAL_ONLY/MAMMALS_TERRESTRIAL_ONLY.shp"

cat("Carregando shapefile IUCN...\n")
mammals <- st_read(iucn_file)

# ============================
# 3. FILTRAR VAMPYRUM SPECTRUM
# ============================

iucn_vampyrum <- mammals %>%
    filter(sci_name == "Vampyrum spectrum", presence == 1, origin == 1) %>%
    st_crop(america_bbox) %>%
    st_set_crs(4326)

cat("‚úÖ Vampyrum spectrum carregado da IUCN\n")

# ============================
# 4. CARREGAR DADOS COLETADOS
# ============================

occ_data <- tryCatch({
    read.csv("C:/Users/Administrador/Desktop/GAB/Mod/Tabela Ocorr√™ncia V. spectrum_DADOS BRUTOS EM PREPARA√á√ÉO - Modelagem_Dec_All.csv")
}, error = function(e) {
    cat("‚ö† Usando dados de exemplo...\n")
    data.frame(
        longitude = c(-70, -65, -75, -68, -72, -63, -77),
        latitude = c(-5, 0, 5, -8, 2, -3, 8)
    )
})

occ_sf <- occ_data %>%
    st_as_sf(coords = c("longitude", "latitude"), crs = 4326) %>%
    st_crop(america_bbox)

# Criar pol√≠gono concavo dos dados coletados
occ_union <- st_union(occ_sf)
occ_concave_hull <- st_concave_hull(occ_union, ratio = 0.175)
occ_concave_hull <- st_simplify(occ_concave_hull, dTolerance = 0.5)
occ_concave_hull <- st_buffer(occ_concave_hull, dist = 0.9)

# ============================
# 4.5 RECORTAR POL√çGONO AZUL PELOS LIMITES CONTINENTAIS
# ============================

occ_concave_hull <- st_transform(occ_concave_hull, st_crs(america_countries))
occ_concave_hull_clipped <- st_intersection(occ_concave_hull, st_union(america_countries))

cat("‚úÖ Pol√≠gono azul recortado pelos limites continentais\n")

# ============================
# 5. CALCULAR SOBREPOSI√á√ÉO
# ============================

intersection_area <- tryCatch({
    result <- st_intersection(iucn_vampyrum, occ_concave_hull_clipped)
    if(nrow(result) > 0 && !all(st_is_empty(result))) result else NULL
}, error = function(e) {
    NULL
})

# ============================
# 6. VERIFICAR QUAIS REGISTROS EST√ÉO DENTRO DA √ÅREA IUCN
# ============================

cat("Analisando sobreposi√ß√£o dos registros com a distribui√ß√£o IUCN...\n")

# Verificar quais pontos est√£o dentro do pol√≠gono IUCN
points_inside_iucn <- st_intersects(occ_sf, iucn_vampyrum)

# Criar vari√°vel indicadora (TRUE = dentro da IUCN, FALSE = fora)
occ_sf$dentro_iucn <- lengths(points_inside_iucn) > 0

# Estat√≠sticas
total_registros <- nrow(occ_sf)
registros_dentro <- sum(occ_sf$dentro_iucn)
registros_fora <- total_registros - registros_dentro

percentual_dentro <- (registros_dentro / total_registros) * 100
percentual_fora <- (registros_fora / total_registros) * 100

cat("üìä ESTAT√çSTICAS DE SOBREPOSI√á√ÉO:\n")
cat("‚Ä¢ Total de registros:", total_registros, "\n")
cat("‚Ä¢ Registros dentro da IUCN:", registros_dentro, "(", round(percentual_dentro, 1), "%)\n")
cat("‚Ä¢ Registros fora da IUCN:", registros_fora, "(", round(percentual_fora, 1), "%)\n")

# ============================
# 7. CALCULAR √ÅREAS PARA O MAPA
# ============================

# Calcular m√©tricas de expans√£o
area_iucn_km2 <- as.numeric(sum(st_area(iucn_vampyrum))) / 1e6
area_coletada_km2 <- as.numeric(st_area(occ_concave_hull_clipped)) / 1e6

if(!is.null(intersection_area) && nrow(intersection_area) > 0) {
    area_sobreposicao_km2 <- as.numeric(sum(st_area(intersection_area))) / 1e6
} else {
    area_sobreposicao_km2 <- 0
}

area_expandida_km2 <- max(0, area_coletada_km2 - area_sobreposicao_km2)
expansao_percentual <- ifelse(area_iucn_km2 > 0, (area_expandida_km2 / area_iucn_km2) * 100, 0)

# ============================
# 8. CRIAR MAPA COMPARATIVO COM INFORMA√á√ïES DE √ÅREA
# ============================

cat("Criando mapa comparativo...\n")

# Criar anota√ß√µes de √°rea para o mapa
area_annotations <- data.frame(
    x = -110,
    y = c(25, 20, 15),
    label = c(
        paste("√Årea IUCN:", round(area_iucn_km2, 0), "km¬≤"),
        paste("√Årea Coletada:", round(area_coletada_km2, 0), "km¬≤"), 
        paste("√Årea Expandida:", round(area_expandida_km2, 0), "km¬≤")
    ),
    color = c("red", "blue", "darkgreen")
)

final_map <- ggplot() +
    geom_sf(data = america_countries, fill = "gray95", color = "gray70", size = 0.2) +
    
    # Pol√≠gono IUCN
    geom_sf(data = iucn_vampyrum, fill = "red", alpha = 0.3, color = "darkred", size = 1) +
    
    # Pol√≠gono de dados coletados (recortado)
    geom_sf(data = occ_concave_hull_clipped, fill = "blue", alpha = 0.3, color = "darkblue", size = 1) +
    
    # √Årea de sobreposi√ß√£o
    {if(!is.null(intersection_area) && nrow(intersection_area) > 0 && !all(st_is_empty(intersection_area)))
        geom_sf(data = intersection_area, fill = "lightgreen", alpha = 0.5, color = "lightgreen", size = 1)} +
    
    # Pontos de ocorr√™ncia (cores diferentes para dentro/fora IUCN)
    geom_sf(data = occ_sf %>% filter(dentro_iucn), 
            color = "darkred", size = 2, alpha = 0.8, shape = 16) +
    geom_sf(data = occ_sf %>% filter(!dentro_iucn), 
            color = "darkblue", size = 2, alpha = 0.8, shape = 17) +
    
    # Anota√ß√µes de √°rea
    geom_label(data = area_annotations, 
               aes(x = x, y = y, label = label, fill = color),
               color = "white", fontface = "bold", size = 4,
               alpha = 0.8, show.legend = FALSE) +
    scale_fill_identity() +
    
    coord_sf(xlim = c(-120, -30), ylim = c(-60, 30)) +
    annotation_north_arrow(location = "tr", which_north = "true") +
    annotation_scale(location = "bl") +
    
    labs(
        title = "DISTRIBUI√á√ÉO: Vampyrum spectrum",
        subtitle = paste("Compara√ß√£o entre distribui√ß√£o IUCN conhecida e dados coletados em campo"),
        caption = "√Årea Vermelha: IUCN | √Årea Azul: √Årea Coletada | Pontos Vermelhos: Registros dentro da distribui√ß√£o conhecida pela IUCN | Pontos Azuis: Registros fora da distribui√ß√£o conhecida pela IUCN"
    ) +
    theme_minimal() +
    theme(
        plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
        plot.subtitle = element_text(size = 12, hjust = 0.5),
        legend.position = "none"
    )

# ============================
# 9. CRIAR GR√ÅFICOS ESTAT√çSTICOS COM MELHOR ESPA√áAMENTO
# ============================

# Dados para gr√°ficos
dados_sobreposicao <- data.frame(
    Categoria = c("Dentro da IUCN", "Fora da IUCN"),
    Quantidade = c(registros_dentro, registros_fora),
    Porcentagem = c(percentual_dentro, percentual_fora),
    Cor = c("#1f77b4", "#ff7f0e")
)

dados_expansao <- data.frame(
    Categoria = c("√Årea IUCN Conhecida", "√Årea Expandida"),
    Area_km2 = c(area_iucn_km2, area_expandida_km2),
    Cor = c("#d62728", "#2ca02c")
)

# Gr√°fico de barras - registros
grafico_barras <- ggplot(dados_sobreposicao, aes(x = Categoria, y = Quantidade, fill = Categoria)) +
    geom_bar(stat = "identity", alpha = 0.8, width = 0.6) +
    geom_text(aes(label = paste(Quantidade, "\nregistros")), 
              vjust = -0.3, size = 4.5, fontface = "bold", lineheight = 0.8) +
    scale_fill_manual(values = c("Dentro da IUCN" = "#1f77b4", "Fora da IUCN" = "#ff7f0e")) +
    labs(
        title = "REGISTROS EM RELA√á√ÉO √Ä IUCN",
        x = "",
        y = "N√∫mero de Registros"
    ) +
    theme_minimal() +
    theme(
        plot.title = element_text(face = "bold", size = 13, hjust = 0.5, margin = margin(b = 10)),
        axis.text = element_text(size = 11),
        axis.title = element_text(size = 11),
        legend.position = "none",
        plot.margin = margin(10, 20, 10, 20)
    ) +
    ylim(0, max(dados_sobreposicao$Quantidade) * 1.25)

# Gr√°fico de pizza
grafico_pizza <- ggplot(dados_sobreposicao, aes(x = "", y = Porcentagem, fill = Categoria)) +
    geom_bar(stat = "identity", width = 1, alpha = 0.8) +
    coord_polar("y", start = 0) +
    geom_text(aes(label = paste0(round(Porcentagem, 1), "%")), 
              position = position_stack(vjust = 0.5), 
              size = 6, fontface = "bold", color = "white") +
    scale_fill_manual(values = c("Dentro da IUCN" = "#1f77b4", "Fora da IUCN" = "#ff7f0e")) +
    labs(
        title = "DISTRIBUI√á√ÉO PERCENTUAL",
        fill = ""
    ) +
    theme_void() +
    theme(
        plot.title = element_text(face = "bold", size = 13, hjust = 0.5, margin = margin(b = 10)),
        legend.position = "bottom",
        legend.text = element_text(size = 11),
        plot.margin = margin(10, 20, 10, 20)
    )

# Gr√°fico de expans√£o de √°rea
grafico_expansao <- ggplot(dados_expansao, aes(x = Categoria, y = Area_km2, fill = Categoria)) +
    geom_bar(stat = "identity", alpha = 0.8, width = 0.6) +
    geom_text(aes(label = paste0(round(Area_km2, 0), "\nkm¬≤")), 
              vjust = -0.3, size = 4.5, fontface = "bold", lineheight = 0.8) +
    scale_fill_manual(values = c("√Årea IUCN Conhecida" = "#d62728", "√Årea Expandida" = "#2ca02c")) +
    labs(
        title = "EXPANS√ÉO DA √ÅREA CONHECIDA",
        subtitle = paste("Ganho de √°rea:", round(expansao_percentual, 1), "%"),
        x = "",
        y = "√Årea (km¬≤)"
    ) +
    theme_minimal() +
    theme(
        plot.title = element_text(face = "bold", size = 13, hjust = 0.5, margin = margin(b = 5)),
        plot.subtitle = element_text(size = 11, hjust = 0.5, face = "italic", margin = margin(b = 10)),
        axis.text = element_text(size = 11),
        axis.title = element_text(size = 11),
        legend.position = "none",
        plot.margin = margin(10, 20, 10, 20)
    ) +
    ylim(0, max(dados_expansao$Area_km2) * 1.25)

# ============================
# 10. CRIAR PAINEL ORGANIZADO COM MELHOR ESPA√áAMENTO
# ============================

cat("Criando painel organizado...\n")

# Layout melhorado com mais espa√ßamento
painel_completo <- 
    final_map + 
    (grafico_barras / grafico_pizza / grafico_expansao) +
    plot_layout(ncol = 2, widths = c(1.2, 0.8)) +
    plot_annotation(
        title = "AN√ÅLISE DA DISTRIBUI√á√ÉO DE Vampyrum spectrum: DADOS IUCN VS COLETADOS EM CAMPO",
        subtitle = paste(
            "Registros dentro da √°rea IUCN:", registros_dentro, "|",
            "Registros fora da √°rea IUCN conhecida:", registros_fora, "|",
            "Expans√£o de √°rea:", round(expansao_percentual, 1), "%"
        ),
        caption = paste(
            "Total de registros analisados:", total_registros, "|",
            "√Årea IUCN:", round(area_iucn_km2, 0), "km¬≤ |",
            "√Årea expandida:", round(area_expandida_km2, 0), "km¬≤"
        ),
        theme = theme(
            plot.title = element_text(face = "bold", size = 18, hjust = 0.5, margin = margin(b = 10)),
            plot.subtitle = element_text(size = 14, hjust = 0.5, margin = margin(b = 15)),
            plot.caption = element_text(size = 12, hjust = 0.5, face = "italic", margin = margin(t = 15)),
            plot.margin = margin(20, 20, 20, 20)
        )
    )

print(painel_completo)

# ============================
# 11. SALVAR RESULTADOS
# ============================

# Salvar painel completo
ggsave(
    file.path(output_dir, "Analise_Completa_Distribuicao2.png"),
    painel_completo,
    width = 20,
    height = 12,
    dpi = 300
)

# Salvar mapa individual
ggsave(
    file.path(output_dir, "Mapa_Comparativo_Areas2.png"),
    final_map,
    width = 14,
    height = 10,
    dpi = 300
)

# ============================
# 12. RELAT√ìRIO FINAL
# ============================

cat("\n", rep("=", 80), "\n")
cat("üìà RELAT√ìRIO FINAL: DISTRIBUI√á√ÉO DE Vampyrum spectrum\n")
cat(rep("=", 80), "\n\n")

cat("üéØ AN√ÅLISE DE REGISTROS:\n")
cat("   ‚Ä¢ Total de registros analisados:", total_registros, "\n")
cat("   ‚Ä¢ Registros dentro da √°rea IUCN conhecida:", registros_dentro, "(", round(percentual_dentro, 1), "%)\n")
cat("   ‚Ä¢ Registros fora da √°rea IUCN conhecida:", registros_fora, "(", round(percentual_fora, 1), "%)\n\n")

cat("üó∫Ô∏è  AN√ÅLISE DE √ÅREA:\n")
cat("   ‚Ä¢ √Årea de distribui√ß√£o IUCN conhecida:", round(area_iucn_km2, 0), "km¬≤\n")
cat("   ‚Ä¢ √Årea coberta pelos dados coletados:", round(area_coletada_km2, 0), "km¬≤\n")
cat("   ‚Ä¢ √Årea de sobreposi√ß√£o entre IUCN e dados coletados:", round(area_sobreposicao_km2, 0), "km¬≤\n")
cat("   ‚Ä¢ √Årea expandida al√©m da IUCN conhecida:", round(area_expandida_km2, 0), "km¬≤\n")
cat("   ‚Ä¢ Expans√£o percentual da √°rea conhecida:", round(expansao_percentual, 1), "%\n\n")

cat("üìÅ ARQUIVOS GERADOS:\n")
cat("   ‚Ä¢ Analise_Completa_Distribuicao.png (painel completo)\n")
cat("   ‚Ä¢ Mapa_Comparativo_Areas.png (mapa com informa√ß√µes de √°rea)\n\n")

cat("üí° CONTRIBUI√á√ÉO DO ESTUDO:\n")
cat("   ‚Ä¢ Identificou", registros_fora, "registros (", round(percentual_fora, 1), "%) fora da distribui√ß√£o IUCN conhecida\n")
cat("   ‚Ä¢ Expandiu a √°rea de ocorr√™ncia conhecida em", round(expansao_percentual, 1), "%\n")
cat("   ‚Ä¢ Fornece dados importantes para atualiza√ß√£o dos mapas de distribui√ß√£o da esp√©cie\n")

cat(rep("=", 80), "\n")

# RODAR APÓS O ENSEMBLE 4 LAYERS
# -------------------------------------------------------------------
# NOVO CÓDIGO: PAINEL DE DIAGNÓSTICO PARA SEU ENSEMBLE DE 4 CAMADAS
# -------------------------------------------------------------------
library(terra)
library(ggplot2)
library(dplyr)
library(patchwork)
library(tidyr)

# 1. Defina a função para criar os painéis de diagnóstico (MESMA FUNÇÃO)
make_panel <- function(r, varname, pres_coords, n_bg = 1000) {
  
  # Mapa da variável ambiental com pontos de presença
  map_env <- ggplot() +
    geom_spatraster(data = r) +
    scale_fill_viridis_c(option = "C") +
    geom_point(data = pres_coords, aes(x = lon, y = lat), 
               color = "red", size = 1, alpha = 0.6) +
    coord_equal() +
    theme_minimal() +
    labs(fill = varname, title = paste("Mapa de", varname))
  
  # Extrai valores para presenças e fundo
  vals_pres <- terra::extract(r, pres_coords) %>% 
    mutate(tipo = "Presença") %>% 
    select(all_of(varname), tipo)
  
  set.seed(123)
  bg_points <- spatSample(r, size = n_bg, method = "random", 
                          as.points = TRUE, na.rm = TRUE)
  vals_bg <- terra::extract(r, bg_points) %>% 
    mutate(tipo = "Fundo") %>% 
    select(all_of(varname), tipo)
  
  # Combina os dados
  vals_combined <- bind_rows(vals_pres, vals_bg)
  
  # Gráfico de violino para comparar distribuições
  violin <- ggplot(vals_combined, aes(x = tipo, y = .data[[varname]], fill = tipo)) +
    geom_violin(trim = FALSE, alpha = 0.7) +
    geom_boxplot(width = 0.1, fill = "white", alpha = 0.5) +
    scale_fill_manual(values = c("Presença" = "tomato", "Fundo" = "steelblue")) +
    theme_minimal() +
    labs(x = "", y = varname, title = paste("Distribuição de", varname)) +
    theme(legend.position = "none")
  
  # Retorna os dois gráficos lado a lado
  map_env + violin
}

# 2. Use os OBJETOS ESPECÍFICOS DO SEU ENSEMBLE DE 4 CAMADAS
#    (Presumo que estes sejam os nomes dos objetos que você tem no ambiente)

# Seu stack de variáveis ambientais (4 camadas)
# env_stack <- seu_stack_original_com_4_variaveis

# Seu raster de adequabilidade final do ensemble
# ensemble_suitability <- ensemble_map  (o mapa final que você criou)

# Seus pontos de presença (ajuste o nome conforme seu objeto)
# presence_coords <- data.frame(lon = suas_longitudes, lat = suas_latitudes)

# EXEMPLO COM NOMES QUE PROVAVELMENTE VOCÊ TEM:
# Se você seguiu o código anterior, seus objetos devem ser:
env_stack <- env_stack  # Seu stack original com as 4 variáveis
ensemble_suitability <- ensemble_map  # O mapa de ensemble que criamos
presence_coords <- data.frame(lon = presences$lon, lat = presences$lat)  # Ajuste conforme seus dados

# 3. Gere o painel de diagnóstico para cada uma das 4 variáveis
variable_plots <- list()
for(i in 1:nlyr(env_stack)) {
  varname <- names(env_stack)[i]
  cat("Processando variável", i, "de", nlyr(env_stack), ":", varname, "\n")
  single_layer <- env_stack[[i]]
  variable_plots[[i]] <- make_panel(single_layer, varname, presence_coords, n_bg = 2000)
}

# 4. Gere o mapa final de adequabilidade do ensemble
suitability_map <- ggplot() +
  geom_spatraster(data = ensemble_suitability) +
  scale_fill_viridis_c(option = "plasma", na.value = NA) +
  geom_point(data = presence_coords, aes(x = lon, y = lat), 
             color = "red", size = 0.8, alpha = 0.9) +
  coord_equal() +
  theme_minimal() +
  labs(fill = "Adequabilidade", 
       title = "Modelo Ensemble: Mapa de Adequabilidade de Habitat",
       subtitle = "Baseado nas 4 variáveis ambientais | Pontos vermelhos: registros de ocorrência")

# 5. Organize e salve as visualizações ESPECÍFICAS para 4 variáveis

# Painel de diagnóstico das 4 variáveis (organizado em 2 colunas)
ggsave("01_Diagnostico_4_Variaveis.png", 
       wrap_plots(variable_plots, ncol = 2), 
       width = 16, height = 10, dpi = 300)

# Mapa de adequabilidade
ggsave("02_Mapa_Adequabilidade_Ensemble_4var.png", 
       suitability_map, 
       width = 12, height = 10, dpi = 300)

# 6. Visualização extra: Compare a distribuição da adequabilidade
#    nos pontos de presença vs fundo

# Extrai valores de adequabilidade nas presenças
suit_pres <- terra::extract(ensemble_suitability, presence_coords) %>% 
  mutate(tipo = "Presença") %>% 
  select(adequabilidade = 2, tipo)

# Amostra pontos de fundo para comparação
set.seed(123)
bg_suit <- spatSample(ensemble_suitability, size = 2000, 
                      method = "random", as.points = TRUE, na.rm = TRUE) %>% 
  as.data.frame() %>% 
  mutate(tipo = "Fundo") %>% 
  select(adequabilidade = 1, tipo)

# Combina os dados
suit_combined <- bind_rows(suit_pres, bg_suit)

# Gráfico de comparação
suitability_comparison <- ggplot(suit_combined, aes(x = tipo, y = adequabilidade, fill = tipo)) +
  geom_violin(alpha = 0.7) +
  geom_boxplot(width = 0.2, alpha = 0.5) +
  scale_fill_manual(values = c("Presença" = "tomato", "Fundo" = "steelblue")) +
  theme_minimal() +
  labs(x = "", y = "Adequabilidade de Habitat", 
       title = "Desempenho do Modelo: Adequabilidade em Pontos de Presença vs Fundo",
       subtitle = "Modelo deve mostrar valores mais altos nas presenças")

ggsave("03_Comparacao_Adequabilidade_Presenca_Fundo.png", 
       suitability_comparison, width = 10, height = 8, dpi = 300)

cat("\n✅ Processo concluído! Arquivos gerados:\n")
cat("• 01_Diagnostico_4_Variaveis.png: Diagnóstico das 4 variáveis ambientais\n")
cat("• 02_Mapa_Adequabilidade_Ensemble_4var.png: Mapa final do ensemble\n")
cat("• 03_Comparacao_Adequabilidade_Presenca_Fundo.png: Validação do modelo\n")

# RODAR APÓS O ENSEMBLE 4 LAYERS
# -------------------------------------------------------------------
#install.packages('patchwork') 
#
#CÓDIGO DE VISUALIZAÇÃO INTEGRADO - Execute APÓS o ensemble
# -------------------------------------------------------------------
library(terra)
library(ggplot2)
library(dplyr)
library(patchwork)
library(tidyr)
library(tidyterra)
library(sf)
library(rnaturalearth)

# 1. USAR OS OBJETOS EXATOS DO SEU CÓDIGO
env_stack_4layers <- env_data4layers
ensemble_suitability <- rast(file.path(output_dir, "ensemble_projection_4layers.tif"))
presence_coords <- data.frame(
  lon = occurence$longitude, 
  lat = occurence$latitude
)

# 2. FUNÇÃO PARA CRIAR PAINÉIS DE DIAGNÓSTICO
make_panel <- function(r, varname, pres_coords, n_bg = 1000) {
  
  map_env <- ggplot() +
    geom_spatraster(data = r) +
    scale_fill_viridis_c(option = "C") +
    geom_point(data = pres_coords, aes(x = lon, y = lat), 
               color = "red", size = 1, alpha = 0.6) +
    coord_equal() +
    theme_minimal() +
    labs(fill = varname, title = paste("Mapa de", varname))
  
  vals_pres <- terra::extract(r, pres_coords) %>% 
    mutate(tipo = "Presença")
  names(vals_pres)[2] <- "valor"
  
  set.seed(123)
  bg_points <- spatSample(r, size = n_bg, method = "random", 
                          as.points = TRUE, na.rm = TRUE)
  vals_bg <- terra::extract(r, bg_points) %>% 
    mutate(tipo = "Fundo")
  names(vals_bg)[2] <- "valor"
  
  vals_combined <- bind_rows(vals_pres, vals_bg)
  
  violin <- ggplot(vals_combined, aes(x = tipo, y = valor, fill = tipo)) +
    geom_violin(trim = FALSE, alpha = 0.7) +
    geom_boxplot(width = 0.1, fill = "white", alpha = 0.5) +
    scale_fill_manual(values = c("Presença" = "tomato", "Fundo" = "steelblue")) +
    theme_minimal() +
    labs(x = "", y = varname, title = paste("Distribuição de", varname)) +
    theme(legend.position = "none")
  
  map_env + violin
}

# 3. GERAR PAINÉIS PARA AS 4 VARIÁVEIS
cat("Gerando paineis de diagnostico para as 4 variaveis...\n")
cat("Variaveis no stack:", names(env_stack_4layers), "\n")

variable_plots <- list()
for(i in 1:nlyr(env_stack_4layers)) {
  varname <- names(env_stack_4layers)[i]
  cat("Processando:", varname, "\n")
  single_layer <- env_stack_4layers[[i]]
  variable_plots[[i]] <- make_panel(single_layer, varname, presence_coords, n_bg = 2000)
}

# 4. MAPA FINAL DE ADEQUABILIDADE
cat("Gerando mapa final de adequabilidade...\n")

countries <- ne_countries(scale = "medium", returnclass = "sf")

suitability_map <- ggplot() +
  geom_spatraster(data = ensemble_suitability) +
  geom_sf(data = countries, fill = NA, color = "black", linewidth = 0.3) +
  scale_fill_viridis_c(option = "plasma", na.value = NA) +
  geom_point(data = presence_coords, aes(x = lon, y = lat), 
             color = "red", size = 1.5, alpha = 0.8) +
  coord_sf(xlim = c(-120, -30), ylim = c(-60, 30)) +
  theme_minimal() +
  labs(fill = "Adequabilidade", 
       title = "Modelo Ensemble - Vampyrum spectrum",
       subtitle = "4 Variaveis: Pressao de Vapor, Temp. Maxima, Precipitacao, Relevo",
       caption = "Pontos vermelhos: registros de ocorrencia")

# 5. COMPARAÇÃO DE ADEQUABILIDADE: PRESENÇAS vs FUNDO
cat("Gerando comparacao de adequabilidade...\n")

suit_pres <- terra::extract(ensemble_suitability, presence_coords) %>% 
  mutate(tipo = "Presença") %>% 
  select(adequabilidade = 2, tipo)

set.seed(123)
bg_suit <- spatSample(ensemble_suitability, size = 2000, 
                      method = "random", as.points = TRUE, na.rm = TRUE) %>% 
  as.data.frame() %>% 
  mutate(tipo = "Fundo") %>% 
  select(adequabilidade = 1, tipo)

suit_combined <- bind_rows(suit_pres, bg_suit)

suitability_comparison <- ggplot(suit_combined, aes(x = tipo, y = adequabilidade, fill = tipo)) +
  geom_violin(alpha = 0.7) +
  geom_boxplot(width = 0.2, alpha = 0.5) +
  scale_fill_manual(values = c("Presença" = "tomato", "Fundo" = "steelblue")) +
  theme_minimal() +
  labs(x = "", y = "Adequabilidade de Habitat", 
       title = "Desempenho do Modelo Ensemble",
       subtitle = "Adequabilidade nos locais de presenca vs areas de fundo")

# 6. GRÁFICO DE IMPORTÂNCIA DAS VARIÁVEIS
cat("Gerando grafico de importancia das variaveis...\n")

importance_plot <- ggplot(EMmean_imp_var4, aes(x = reorder(expl_var, var_imp), y = var_imp)) +
  geom_bar(stat = "identity", fill = "darkgreen", alpha = 0.8) +
  geom_text(aes(label = round(var_imp, 3)), hjust = -0.2, size = 3) +
  coord_flip() +
  theme_minimal() +
  labs(x = "Variavel", y = "Importancia Relativa", 
       title = "Importancia das Variaveis - Ensemble Final",
       subtitle = "Consenso entre todos os algoritmos")

# 7. SALVAR TODOS OS GRÁFICOS
cat("Salvando graficos...\n")

ggsave(file.path(output_dir, "01_Diagnostico_4_Variaveis.png"), 
       wrap_plots(variable_plots, ncol = 2), 
       width = 16, height = 12, dpi = 300)

ggsave(file.path(output_dir, "02_Mapa_Adequabilidade_Ensemble.png"), 
       suitability_map, 
       width = 14, height = 10, dpi = 300)

ggsave(file.path(output_dir, "03_Comparacao_Adequabilidade.png"), 
       suitability_comparison, 
       width = 10, height = 8, dpi = 300)

ggsave(file.path(output_dir, "04_Importancia_Variaveis_Ensemble.png"), 
       importance_plot, 
       width = 10, height = 6, dpi = 300)

# 8. FIGURA RESUMO FINAL
final_summary_plot <- (suitability_map | importance_plot) / 
  (wrap_plots(variable_plots[[1]], variable_plots[[2]]) | 
     wrap_plots(variable_plots[[3]], variable_plots[[4]])) /
  suitability_comparison +
  plot_annotation(title = "Resumo Completo - Modelagem de Vampyrum spectrum",
                  subtitle = "Ensemble com 4 Variaveis Ambientais")

ggsave(file.path(output_dir, "05_Resumo_Completo.png"), 
       final_summary_plot, 
       width = 18, height = 20, dpi = 300)

# 9. RELATÓRIO FINAL
cat("============================================================\n")
cat("VISUALIZACAO CONCLUIDA\n")
cat("============================================================\n")
cat("Diretorio de saida:", output_dir, "\n\n")
cat("GRAFICOS CRIADOS:\n")
cat("- 01_Diagnostico_4_Variaveis.png: Diagnostico ambiental completo\n")
cat("- 02_Mapa_Adequabilidade_Ensemble.png: Mapa final do modelo\n")
cat("- 03_Comparacao_Adequabilidade.png: Validacao do modelo\n")
cat("- 04_Importancia_Variaveis_Ensemble.png: Importancia das variaveis\n")
cat("- 05_Resumo_Completo.png: Figura resumo para apresentacoes\n\n")

cat("VARIAVEIS ANALISADAS:\n")
for(i in 1:nlyr(env_stack_4layers)) {
  cat("  ", i, "-", names(env_stack_4layers)[i], "\n")
}

cat("\nIMPORTANCIA DAS VARIAVEIS (ORDEM DECRESCENTE):\n")
print(EMmean_imp_var4)

cat("============================================================\n")
